/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // 判断二叉树是不是平衡二叉树，有一个条件
    // 1.左右高度相差不超过1。
    // 该题目只要求平衡或者不平衡，没有要求是否为搜索树。
    int depth(TreeNode* root)
    {
        return !root ? 0 : max(depth(root->left), depth(root->right))+1;
    }

    bool isBalanced(TreeNode* root) {
        return !root ? 1 : isBalanced(root->left) && isBalanced(root->right) && abs(depth(root->left) - depth(root->right)) <= 1;
    }
};
