/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        // 二叉树翻转
        if(root == nullptr)
        {
            return nullptr;
        }
        // 暂存左节点的值
        TreeNode* tmp = root->left;
        // 然后每次暂存左节点的值，让左等于右
        root->left = invertTree(root->right);
        // 再让右等于左边暂存值
        root->right = invertTree(tmp);
        return root;
    }
