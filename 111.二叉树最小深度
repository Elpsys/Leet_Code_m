/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
// 这里有一个点，说的是最小高度为根节点到叶子节点的高度
// 所以说，这里需要特殊处理该情况，不能用直接计算树的最大高度的函数反过来。
    int minDepth(TreeNode* root) {
        if(root == nullptr)
        {
            return 0;
        }
        if(root->left == nullptr)
        {
            return minDepth(root->right)+1;
        }
        if(root->right == nullptr)
        {
            return minDepth(root->left)+1;
        }
        return min(minDepth(root->left), minDepth(root->right)) + 1;
    }
};
